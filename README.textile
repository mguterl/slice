h1. Setup steps

The following step-by-step process outlines how to setup a Rails server on Slicehost using Debian 4.0 and Passenger.

h2. Install git

From remote server, type: 

<pre>sudo aptitude update
sudo aptitude upgrade
sudo aptitude install git-core</pre>

h2. Add the deploy user

type @adduser deploy@

Command will ask you for a new password. Go ahead and choose one. You can safely choose default user information (blank).

Now you need to setup sudo for the deploy user.

type @visudo@

Add the following text to bottom of file:

@deploy ALL=(ALL) ALL@

You can confirm you got sudo setup properly by typing @cat /etc/sudoers@ and ensuring that the deploy line you added is at the bottom of the output

h2. SSH public key

You need to copy a SSH public key from your local machine to the server. You need to have created SSH key first.

from your local computer, type @scp ~/.ssh/id_dsa.pub deploy@XXX.XXX.XXX.XXX:@ (replace X's with your slice IP, don't forget the trailing semi-colon) 

h3. Add public key to authorized keys and set permissions

Login to the slice using your new 'deploy' user, and enter the following commands:

<pre>mkdir ~/.ssh
touch ~/.ssh/authorized_keys
chmod 600 ~/.ssh/authorized_keys
cat ~/id_dsa.pub >> ~/.ssh/authorized_keys
rm ~/id_dsa.pub</pre>

h2. Copy the setup files to remote server

Login as deploy user, and type: @git clone git://github.com/mguterl/slice.git@

h2. Configure the SSH daemon to be more secure

<pre>sudo -s (enter password when prompted)
cp slice/etc/ssh/sshd_config /etc/ssh/sshd_config
/etc/init.d/ssh restart</pre>

h2. Copy bash settings to your home directory

<pre>cat slice/.bash_profile >> ~/.bash_profile
source ~/.bash_profile</pre>

h2. Add some other misc. stuff

<pre>install locales
sudo dpkg-reconfigure locales
install screen
install build-essential</pre>

h2. Install and setup Shorewall (firewall)

Enter these commands:

<pre>install shorewall
cp slice/etc/shorewall/rules /etc/shorewall/rules
cp slice/etc/shorewall/zones /etc/shorewall/zones
cp slice/etc/shorewall/interfaces /etc/shorewall/interfaces
cp slice/etc/shorewall/policy /etc/shorewall/policy
nano /etc/default/shorewall</pre>

Enable shorewall by setting startup=1 in the configuration

h2. Ruby installation

<pre>install wget libssl-dev libreadline5-dev zlib1g-dev
mkdir -p ~/src
cd ~/src

wget ftp://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.6-p111.tar.bz2
tar -jxvf ruby-1.8.6-p111.tar.bz2
cd ruby-1.8.6-p111
./configure --prefix=/usr/local --disable-pthread
make
sudo make install

cd ~/src
wget http://rubyforge.org/frs/download.php/45905/rubygems-1.3.1.tgz
tar -xzvf rubygems-1.3.1.tgz
cd rubygems-1.3.1
sudo ruby setup.rb</pre>

h2. Apache installation

@install apache2 apache2-prefork-dev@

h2. Passenger installation

<pre>sudo gem install rake passenger
sudo passenger-install-apache2-module</pre>

h2. MySQL installation

<pre>install mysql-server-5.0 libmysqlclient15-dev
mysqladmin -u root password YOURPASSWORDHERE
sudo gem install mysql
install phpmyadmin</pre>

Visit http://XXX.XXX.XXX.XXX/phpmyadmin/

h2. Setup Passenger

@sudo nano /etc/apache2/apache2.conf@

Add the following lines:

<pre>LoadModule passenger_module /usr/local/lib/ruby/gems/1.8/gems/passenger-2.0.3/ext/apache2/mod_passenger.so
   PassengerRoot /usr/local/lib/ruby/gems/1.8/gems/passenger-2.0.3
   PassengerRuby /usr/local/bin/ruby</pre>

Restart apache with this command:

@sudo /etc/init.d/apache2 restart@

h2. Sources

* http://articles.slicehost.com/2007/9/5/debian-etch-setup-page-1
* http://articles.slicehost.com/2007/9/5/debian-etch-setup-page-2